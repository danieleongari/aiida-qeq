language: python
python:
- "3.6"
- "2.7"

services:
  - postgresql
  - rabbitmq

addons:
  postgresql: "10"

env:
  global:
  - AIIDA_VERSION: develop
  - AIIDA_DEVELOP_GIT_HASH: 0ca5d991d039dca2261df3d6ad8da2f03d591caa
  # add network executable to PATH
  #- PATH=${PATH}:${TRAVIS_BUILD_DIR}
  # add fake executables to path
  - PATH: "${PATH}:${TRAVIS_BUILD_DIR}/.travis-data"
  matrix:
  - TEST_AIIDA_BACKEND: django
    TEST_TYPE: tests
  - TEST_AIIDA_BACKEND: sqlalchemy
    TEST_TYPE: tests
  - TEST_AIIDA_BACKEND: django
    TEST_TYPE: docs
    READTHEDOCS: 'True'
  - TEST_AIIDA_BACKEND: django
    TEST_TYPE: pre-commit

  # Remove this to enforce the AiiDA coding style
  allow_failures: 
  - TEST_AIIDA_BACKEND: django
    TEST_TYPE: pre-commit

before_install:
  # Upgrade pip setuptools and wheel
  - pip install -U wheel setuptools coveralls
  - pip install pip==18.1
  # add fake eqeq & egulp executables
  - cat "#!/bin/bash\necho 'eqeq'" > eqeq; chmod +x eqeq
  - cat "#!/bin/bash\necho 'egulp'" > egulp; chmod +x egulp

install:
  - if [ "$AIIDA_VERSION" == "develop" ]; then .travis-data/install_aiida_github.sh ; fi  # installs develop branch
  - pip install -e .[testing,pre-commit]
  - reentry scan -r aiida

script:
  - if [ "$TEST_TYPE" == "tests" ] ; then py.test --cov aiida_qeq --cov-append . ; fi  # runs unit tests
  - if [ "$TEST_TYPE" == "pre-commit" ] ; then pre-commit install; pre-commit run --all-files || ( git status --short; git diff ; exit 1 ); fi
  - if [ "$TEST_TYPE" == "docs" ] ; then cd docs; make; fi  # creates documentation

after_success:
  - coveralls

jobs:
  include:
    - stage: deploy
      # Make sure the tag is valid semver
      if: "tag =~ ^v[0-9]+\\.[0-9]+\\.[0-9]+(a|b|rc)?[0-9]*$"
      services: ignore
      addons: skip
      python: 3.6
      before_install: skip
      install: skip
      before_script: skip
      script: skip
      env: ignore
      before_deploy:
        - echo "About to deploy $TRAVIS_TAG to PyPI"
      after_deploy:
        - echo "Deployed $TRAVIS_TAG to PyPI"
      deploy: &pypi
        provider: pypi
        skip_existing: true
        username: aiida-bot
        password:
          # Instructions:
          # - create deploy bot account on PyPI
          # - add bot account to your PyPI project
          # - Install travis cli tool, see https://docs.travis-ci.com/user/encryption-keys/
          # - cd to your git repository; travis login --org
          # - travis encrypt <pw of bot account>
          secure: "H4X2KnMOSsfu7arD7k/VCoJiSeIRnjikup23M0A200vckbDnlE57meNz3q8eCK5Ljch9uKEBiPIMH1E+tFdzbvGgtAcPc+yr1vFa3jOcQqIKxerXBcvU44X8PP83VhZT+MRBA2EP4UlWeNnSBE8Z5EGkwBRBXJDYj0W9sk8y9p0e29n0P9uqlzCr6V/13z5qymkjbrunvj3PAlIuwmtixelWWaWVDN4rT1EI8Ep0kR5l7M4H4rdnUhivLJKOSZGFjR0RMi/URoED/ar85BKCzUCxOPuKJ2X0519LS1Bjb0w4CnbwOsIVJ187iq/cPH+vEQhsrStdoo/qrHzLu3RzfcXrJ6JOq6jtPi2r+P8/dlrqJHEtZsklY22eYGNDl9oiVERrc64Va2L8RO1cQjo7pSAPb2xSomVQi8ickXpuOcuciu8YeXsVsN2MPkGirTTKFmwDVWZ1NM+RRNlf1RuEqRohtziKsSMR6tbkh4UEWRN36JDFXRjEJGMIsm2U/SZVbVjCHWjZ5YZ6B1QUXPVkonIa/BojrNHSdNUi8hcG3cfgDcZnstQ48wHTDJQljBbmd+0iAH2DBZzWpqjlmV+2JO+gbYtyYe9GQvnMC77tnqVl0evI8X6SyDkRg15A1WkmxoGcTx4aQgB8blkK5XTxDJOOBTj3WDiCv3+JEiCYnrk="
        on:
          repo: ltalirz/aiida-qeq
          branch: master
          tags: true
